<?php

/**
 * BaseTask
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $label
 * @property boolean $complete
 * @property timestamp $creation
 * @property timestamp $modification
 * @property integer $x
 * @property integer $y
 * @property boolean $page
 * @property boolean $dropped
 * @property integer $parent_id
 * @property integer $owner_id
 * @property User $Owner
 * @property Task $Parent
 * @property Doctrine_Collection $Subtasks
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseTask extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('task');
        $this->hasColumn('label', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('complete', 'boolean', null, array(
             'type' => 'boolean',
             ));
        $this->hasColumn('creation', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('modification', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('x', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('y', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('page', 'boolean', null, array(
             'type' => 'boolean',
             ));
        $this->hasColumn('dropped', 'boolean', null, array(
             'type' => 'boolean',
             ));
        $this->hasColumn('parent_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('owner_id', 'integer', null, array(
             'type' => 'integer',
             ));

        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('User as Owner', array(
             'local' => 'owner_id',
             'foreign' => 'id'));

        $this->hasOne('Task as Parent', array(
             'local' => 'parent_id',
             'foreign' => 'id'));

        $this->hasMany('Task as Subtasks', array(
             'local' => 'id',
             'foreign' => 'parent_id'));
    }
}